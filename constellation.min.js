(function(a,b,c,d){"use strict";var e=this,f;e.exports?f=e.exports:f=e.Const={};var g=f.utils={empty:function(a){if(a instanceof Array)a.length=0;else for(var b in a)a.hasOwnProperty(b)&&delete a[b];return a},size:function(a){if(a instanceof Array)return a.length;var b=0;for(var c in a)a.hasOwnProperty(c)&&b++;return b},contains:function(a,b){if(a instanceof Array){if(typeof Array.prototype.indexOf=="function")return a.indexOf(b)>=0;var c=a.length,d=0;while(d<c)if(a[d++]===b)return!0}return a.hasOwnProperty(b)},each:function(a,b,c){var d=0;if(a instanceof Array){var e=a.length;while(d<e)b.call(c,a[d],d++)}else for(d in a)a.hasOwnProperty(d)&&b.call(c,a[d],d);return a},map:function(a,b,c){var d=0;if(a instanceof Array){var e=a.length;while(d<e)a[d]=b.call(c,a[d],d++)}else for(d in a)a.hasOwnProperty(d)&&(a[d]=b.call(c,a[d],d));return a},all:function(a,b,c){var d=a.length,e=0;while(e<d)if(!b.call(c,a[e],e++))return!1;return!0}},h=f.Point=function(a,b){this.x=a||0,this.y=b||0},i=f.Rect=function(a,b,c,d){this.x=a||0,this.y=b||0,this.width=c||0,this.height=d||0};f.distance=function(b,c){var d=c.x-b.x,e=c.y-b.y;return a(d*d+e*e)},f.ccw=function(a,b,c,d){return d?(c.y-a.y)*(b.x-a.x)>(b.y-a.y)*(c.x-a.x):(c.y-a.y)*(b.x-a.x)>=(b.y-a.y)*(c.x-a.x)},f.intersect=function(a,b,c,d){return this.ccw(a,c,d)!==this.ccw(b,c,d)&&this.ccw(a,b,c)!==this.ccw(a,b,d)},f.getRectForPointRing=function(a){var d=a[0],e=d.x,f=d.x,h=d.y,j=d.y;return g.each(a,function(a){e=b(e,a.x),f=c(f,a.x),h=b(h,a.y),j=c(j,a.y)}),new i(e,h,f-e,j-h)},f.hitTestRect=function(a,d){var e=b(d.x,d.x+d.width),f=c(d.x,d.x+d.width),g=b(d.y,d.y+d.height),h=c(d.y,d.y+d.height);return a.x>=e&&a.y>=g&&a.x<=f&&a.y<=h},f.hitTestPointRing=function(a,c){var d=c.length,e=new f.Point(0,a.y),g=0,h=0,i,j;while(h<d)i=c[h],j=c[(h+1)%d],e.x=b(e.x,b(i.x,j.x)-1),g+=this.intersect(e,a,i,j)?1:0,h++;return g%2>0},f.snapPointToLineSegment=function(a,b,c){var d=a.x-b.x,e=a.y-b.y,g=c.x-b.x,h=c.y-b.y,i=g*g+h*h,j=d*g+e*h,k=j/i;return k<0?new f.Point(b.x,b.y):k>1?new f.Point(c.x,c.y):new f.Point(b.x+g*k,b.y+h*k)},f.getNearestPointToPoint=function(a,b){var c=b.length-1,e,g,h=null,i=NaN;b.sort(function(b,c){return b=d(a.x-b.x),c=d(a.x-c.x),c-b});while(c>=0){e=b[c--];if(!(d(a.x-e.x)<i||isNaN(i)))break;g=f.distance(a,e);if(g<i||isNaN(i))h=e,i=g}return h};var j=f.Node=function(a,b,c,d,e){this.id=a,this.x=b||0,this.y=c||0,this.to=e||{},this.data=d||null},k=f.Polygon=function(a,b,c){this.id=a,this.nodes=b.slice(),this.data=c||null},l=f.Path=function(a,b,c){this.nodes=a||[],this.weight=b||0,this.estimate=c||0};l.prototype={copy:function(a,b){return new l(this.nodes.slice(),a||this.weight,b||this.estimate)},last:function(){return this.nodes[this.nodes.length-1]},contains:function(a){return g.contains(a)},prioratize:function(a,b){return b.estimate-a.estimate},dispose:function(){this.nodes.length=0,this.nodes=null}};var m=f.Grid=function(a,b){this._h={},this._i=0,this.nodes={},this.polys={},this.setData(a,b)};m.prototype={events:{ADD:"add",REMOVE:"remove",CHANGE:"update"},types:{NODE:"n",POLYGON:"p"},_id:function(a){return a+this._i++},on:function(a,b,c){return(this._h[a]=this._h[a]||[]).push({h:b,c:c}),this},off:function(a,b,c){for(var d=this._h[a],e=0,f;d&&b&&(f=d[e]);e++)f.h===b&&(!c||f.c===c)&&d.splice(e--,1);return d&&!e&&(d.length=0),d||(this._h={}),this},emit:function(a){for(var b=this._h[a],c=0,d;b&&(d=b[c++]);)d.h.apply(d.c,b.slice.call(arguments,1));return this},reset:function(){g.empty(this.nodes),g.empty(this.polys),this.icount=0},setData:function(a,b){this.reset(),g.each(a||[],function(a){this.nodes[a.id]=a},this),g.each(b||[],function(a){this.polys[a.id]=a},this)},addNode:function(a,b,c,d){var e=new j(this._id(this.types.NODE),a,b,c);return this.nodes[e.id]=e,this.update(!0,d),e.id},getNodeById:function(a){return this.nodes.hasOwnProperty(a)?this.nodes[a]:null},getNodesForIds:function(a){return g.map(a.slice(),function(a){return this.nodes[a]},this)},getNumNodes:function(){return g.size(this.nodes)},hasNode:function(a){return this.nodes.hasOwnProperty(a)},hasNodes:function(a){return g.all(a,function(a){return this.nodes.hasOwnProperty(a)},this)},joinNodes:function(a,b){var c=!1;return a.length>1&&this.hasNodes(a)&&g.each(a,function(b){var d=this.nodes[b],e=a.length,f=0;while(f<e)b=a[f++],b!==d.id&&(d.to[b]=1,c=!0)},this),this.update(c,b),c},splitNodes:function(a,b){var c=!1;return a.length<2?this.detachNodes(a):(g.each(a,function(b){var d=this.nodes[b];if(d&&d.to)for(b in d.to)g.contains(a,b)&&(delete d.to[b],c=!0)},this),this.update(c,b),c)},detachNodes:function(a,b){var c=!1;return g.each(a,function(a){var b=this.nodes[a],d,e;if(b&&b.to){for(e in b.to)delete b.to[e],d=this.nodes[e],d&&d.to&&delete d.to[a];c=!0}},this),this.update(c,b),c},removeNodes:function(a,b){var c=this.detachNodes(a,!0);return g.each(a,function(a){var b,d;if(this.nodes.hasOwnProperty(a)){delete this.nodes[a];for(d in this.polys)b=this.polys[d],b&&g.contains(b.nodes,a)&&delete this.polys[d];c=!0}},this),this.update(c,b),c},addPolygon:function(a,b,c){var d;return a.length>=3&&this.hasNodes(a)?(d=new k(this._id(this.types.POLYGON),a,b),this.polys[d.id]=d,this.update(!0,c),d.id):null},getPolygonById:function(a){return this.polys.hasOwnProperty(a)?this.polys[a]:null},getNodesForPolygon:function(a){return this.polys.hasOwnProperty(a)?g.map(this.polys[a].nodes.slice(),function(a){return this.nodes[a]},this):null},getNumPolygons:function(){return g.size(this.polys)},removePolygons:function(a,b){var c=!1;return g.each(a,function(a){this.polys.hasOwnProperty(a)&&(delete this.polys[a],c=!0)},this),this.update(c,b),c},update:function(a,b){(a||a===undefined)&&!b&&this.emit(this.events.CHANGE)},findPath:function(a,b,c,d){var e=[],g={},h,i,j,k,m,n,o=this.getNodeById(a),p=this.getNodeById(b),q=0,r;typeof c!="function"&&(c=f.distance),typeof d!="function"&&(d=f.distance),e.push(new l([o],c(o,o)));while(e.length>0){i=e.pop(),o=i.last();for(r in o.to)if(o.to.hasOwnProperty(r)){j=this.nodes[r];if(!!j&&!i.contains(j)){m=i.weight+c(o,j);if(m<=(g[j.id]||m)){g[j.id]=m,n=m+d(j,p);if(!h||n<h.weight)k=i.copy(m,n),k.nodes.push(j),j.id===p.id?(h&&h.dispose(),h=k):e.push(k),k=null}}j=null}i.dispose(),i=o=null,e.sort(l.prototype.prioratize),q++}return e=g=p=null,{valid:!!h,weight:h?h.weight:0,cycles:q,nodes:h?h.nodes:[]}},findPathWithFewestNodes:function(a,b){function c(){return 1}return this.findPath(a,b,c,c)},snapPointToGrid:function(a){var b=null,c=NaN,d={};return g.each(this.nodes,function(e,g){if(a.id!==g)for(var h in e.to)if(e.to.hasOwnProperty(h)&&!d.hasOwnProperty(h+" "+e.id)){var i=this.nodes[h],j=f.snapPointToLineSegment(a,e,i),k=f.distance(a,j);d[e.id+" "+i.id]=!0;if(!b||k<c)b=j,c=k}},this),b||a},getNearestNodeToNode:function(a){var b=null,c=[],d=this.getNodeById(a);return d&&(g.each(this.nodes,function(a){a.id!==d.id&&c.push(a)},this),b=f.getNearestPointToPoint(d,c),c.length=0),b},getNearestNodeToPoint:function(a){var b=[];return g.each(this.nodes,function(a){b.push(a)},this),a=f.getNearestPointToPoint(a,b),b.length=0,a},hitTestPointInPolygons:function(a){for(var b in this.polys)if(this.polys.hasOwnProperty(b)&&f.hitTestPointRing(a,this.getNodesForPolygon(b)))return!0;return!1},getPolygonHitsForPoint:function(a){var b=[];return g.each(this.polys,function(c,d){f.hitTestPointRing(a,this.getNodesForPolygon(d))&&b.push(c.id)},this),b},getNodesInPolygon:function(a){var b=[],c=this.getPolygonById(a),d=this.getNodesForPolygon(a),e=f.getRectForPointRing(d);return c&&g.each(this.nodes,function(a){f.hitTestRect(a,e)&&!g.contains(c.nodes,a.id)&&f.hitTestPointRing(a,d)&&b.push(a.id)},this),b},getNodesInRect:function(a){var b=[];return g.each(this.nodes,function(c){f.hitTestRect(c,a)&&b.push(c.id)},this),b}},typeof define=="function"&&typeof define.amd=="object"&&define(f)}).call(this,Math.sqrt,Math.min,Math.max,Math.abs);