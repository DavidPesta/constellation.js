(function(s,j){var m=j(Math.sqrt,Math.min,Math.max,Math.abs);"undefined"!==typeof exports?module.exports=m:"function"===typeof define&&define.amd&&define(m)})(this,function(s,j,m,p){function n(a){return a instanceof Array}function r(a){return"function"===typeof a}var f={},g=f.utils={empty:function(a){if(n(a))a.length=0;else for(var b in a)a.hasOwnProperty(b)&&delete a[b];return a},size:function(a){if(n(a))return a.length;var b=0,c;for(c in a)a.hasOwnProperty(c)&&b++;return b},contains:function(a,
b){if(n(a)){if(r(Array.prototype.indexOf))return 0<=a.indexOf(b);for(var c=a.length,d=0;d<c;)if(a[d++]===b)return!0}return a.hasOwnProperty(b)},each:function(a,b,c){var d=0;if(n(a))for(var e=a.length;d<e;)b.call(c,a[d],d++);else for(d in a)a.hasOwnProperty(d)&&b.call(c,a[d],d);return a},map:function(a,b,c){var d=0;if(n(a))for(var e=a.length;d<e;)a[d]=b.call(c,a[d],d++);else for(d in a)a.hasOwnProperty(d)&&(a[d]=b.call(c,a[d],d));return a},all:function(a,b,c){for(var d=a.length,e=0;e<d;)if(!b.call(c,
a[e],e++))return!1;return!0}};f.Point=function(a,b){this.x=a||0;this.y=b||0};var t=f.Rect=function(a,b,c,d){this.x=a||0;this.y=b||0;this.width=c||0;this.height=d||0};f.distance=function(a,b){var c=b.x-a.x,d=b.y-a.y;return s(c*c+d*d)};f.ccw=function(a,b,c,d){return d?(c.y-a.y)*(b.x-a.x)>(b.y-a.y)*(c.x-a.x):(c.y-a.y)*(b.x-a.x)>=(b.y-a.y)*(c.x-a.x)};f.intersect=function(a,b,c,d){return this.ccw(a,c,d)!==this.ccw(b,c,d)&&this.ccw(a,b,c)!==this.ccw(a,b,d)};f.getRectForPointRing=function(a){var b=a[0],
c=b.x,d=b.x,e=b.y,f=b.y;g.each(a,function(a){c=j(c,a.x);d=m(d,a.x);e=j(e,a.y);f=m(f,a.y)});return new t(c,e,d-c,f-e)};f.hitTestRect=function(a,b){var c=j(b.x,b.x+b.width),d=m(b.x,b.x+b.width),e=j(b.y,b.y+b.height),f=m(b.y,b.y+b.height);return a.x>=c&&a.y>=e&&a.x<=d&&a.y<=f};f.hitTestPointRing=function(a,b){for(var c=b.length,d=new f.Point(0,a.y),e=0,g=0,h,k;g<c;)h=b[g],k=b[(g+1)%c],d.x=j(d.x,j(h.x,k.x)-1),e+=this.intersect(d,a,h,k)?1:0,g++;return 0<e%2};f.snapPointToLineSegment=function(a,b,c){var d=
c.x-b.x,e=c.y-b.y;a=((a.x-b.x)*d+(a.y-b.y)*e)/(d*d+e*e);return 0>a?new f.Point(b.x,b.y):1<a?new f.Point(c.x,c.y):new f.Point(b.x+d*a,b.y+e*a)};f.getNearestPointToPoint=function(a,b){var c=b.length-1,d,e,g=null,h=NaN;for(b.sort(function(b,c){b=p(a.x-b.x);c=p(a.x-c.x);return c-b});0<=c;)if(d=b[c--],p(a.x-d.x)<h||isNaN(h)){if(e=f.distance(a,d),e<h||isNaN(h))g=d,h=e}else break;return g};var u=f.Node=function(a,b,c,d,e){this.id=a;this.x=b||0;this.y=c||0;this.to=e||{};this.data=d||null},v=f.Polygon=function(a,
b,c){this.id=a;this.nodes=b.slice();this.data=c||null},q=f.Path=function(a,b,c){this.nodes=a||[];this.weight=b||0;this.estimate=c||0};q.prototype={copy:function(a,b){return new q(this.nodes.slice(),a||this.weight,b||this.estimate)},last:function(){return this.nodes[this.nodes.length-1]},contains:function(a){return g.contains(a)},prioratize:function(a,b){return b.estimate-a.estimate},dispose:function(){this.nodes.length=0;this.nodes=null}};(f.Grid=function(a,b){this._h={};this._i=0;this.nodes={};this.polys=
{};this.setData(a,b)}).prototype={types:{NODE:"n",POLYGON:"p"},_id:function(a){return a+this._i++},reset:function(){g.empty(this.nodes);g.empty(this.polys);this.icount=0},setData:function(a,b){this.reset();g.each(a||[],function(a){this.nodes[a.id]=a},this);g.each(b||[],function(a){this.polys[a.id]=a},this)},addNode:function(a,b,c){a=new u(this._id(this.types.NODE),a,b,c);this.nodes[a.id]=a;return a.id},getNodeById:function(a){return this.nodes.hasOwnProperty(a)?this.nodes[a]:null},getNodesForIds:function(a){return g.map(a.slice(),
function(a){return this.nodes[a]},this)},getNumNodes:function(){return g.size(this.nodes)},hasNode:function(a){return this.nodes.hasOwnProperty(a)},hasNodes:function(a){return g.all(a,function(a){return this.nodes.hasOwnProperty(a)},this)},joinNodes:function(a){var b=!1;1<a.length&&this.hasNodes(a)&&g.each(a,function(c){for(var d=this.nodes[c],e=a.length,f=0;f<e;)c=a[f++],c!==d.id&&(d.to[c]=1,b=!0)},this);return b},splitNodes:function(a){var b=!1;if(2>a.length)return this.detachNodes(a);g.each(a,
function(c){var d=this.nodes[c];if(d&&d.to)for(c in d.to)g.contains(a,c)&&(delete d.to[c],b=!0)},this);return b},detachNodes:function(a){var b=!1;g.each(a,function(a){var d=this.nodes[a],e,f;if(d&&d.to){for(f in d.to)delete d.to[f],(e=this.nodes[f])&&e.to&&delete e.to[a];b=!0}},this);return b},removeNodes:function(a){var b=this.detachNodes(a);g.each(a,function(a){var d,e;if(this.nodes.hasOwnProperty(a)){delete this.nodes[a];for(e in this.polys)(d=this.polys[e])&&g.contains(d.nodes,a)&&delete this.polys[e];
b=!0}},this);return b},addPolygon:function(a,b){var c;return 3<=a.length&&this.hasNodes(a)?(c=new v(this._id(this.types.POLYGON),a,b),this.polys[c.id]=c,c.id):null},getPolygonById:function(a){return this.polys.hasOwnProperty(a)?this.polys[a]:null},getNodesForPolygon:function(a){return this.polys.hasOwnProperty(a)?g.map(this.polys[a].nodes.slice(),function(a){return this.nodes[a]},this):null},getNumPolygons:function(){return g.size(this.polys)},removePolygons:function(a){var b=!1;g.each(a,function(a){this.polys.hasOwnProperty(a)&&
(delete this.polys[a],b=!0)},this);return b},findPath:function(a,b,c,d){var e=[],g={},h,k,l,j;a=this.getNodeById(a);var m=this.getNodeById(b),n=0,p;r(c)||(c=f.distance);r(d)||(d=f.distance);for(e.push(new q([a],c(a,a)));0<e.length;){b=e.pop();a=b.last();for(p in a.to)if(a.to.hasOwnProperty(p)&&(k=this.nodes[p])&&!b.contains(k))if(l=b.weight+c(a,k),l<=(g[k.id]||l))if(g[k.id]=l,j=l+d(k,m),!h||j<h.weight)l=b.copy(l,j),l.nodes.push(k),k.id===m.id?(h&&h.dispose(),h=l):e.push(l);b.dispose();e.sort(q.prototype.prioratize);
n++}return{valid:!!h,weight:h?h.weight:0,cycles:n,nodes:h?h.nodes:[]}},findPathWithFewestNodes:function(a,b){var c=function(){return 1};return this.findPath(a,b,c,c)},snapPointToGrid:function(a){var b=null,c=NaN,d={};g.each(this.nodes,function(e,g){if(a.id!==g)for(var h in e.to)if(e.to.hasOwnProperty(h)&&!d.hasOwnProperty(h+" "+e.id)){var k=this.nodes[h],l=f.snapPointToLineSegment(a,e,k),j=f.distance(a,l);d[e.id+" "+k.id]=!0;if(!b||j<c)b=l,c=j}},this);return b||a},getNearestNodeToNode:function(a){var b=
null,c=[],d=this.getNodeById(a);d&&(g.each(this.nodes,function(a){a.id!==d.id&&c.push(a)},this),b=f.getNearestPointToPoint(d,c),c.length=0);return b},getNearestNodeToPoint:function(a){var b=[];g.each(this.nodes,function(a){b.push(a)},this);a=f.getNearestPointToPoint(a,b);b.length=0;return a},hitTestPointInPolygons:function(a){for(var b in this.polys)if(this.polys.hasOwnProperty(b)&&f.hitTestPointRing(a,this.getNodesForPolygon(b)))return!0;return!1},getPolygonHitsForPoint:function(a){var b=[];g.each(this.polys,
function(c,d){f.hitTestPointRing(a,this.getNodesForPolygon(d))&&b.push(c.id)},this);return b},getNodesInPolygon:function(a){var b=[],c=this.getPolygonById(a),d=this.getNodesForPolygon(a),e=f.getRectForPointRing(d);c&&g.each(this.nodes,function(a){f.hitTestRect(a,e)&&(!g.contains(c.nodes,a.id)&&f.hitTestPointRing(a,d))&&b.push(a.id)},this);return b},getNodesInRect:function(a){var b=[];g.each(this.nodes,function(c){f.hitTestRect(c,a)&&b.push(c.id)},this);return b}};return f});