// Constellation.js 0.2.0
// (c) 2011-2013 Greg MacWilliam
// Freely distributed under the MIT license
// http://constellationjs.org
(function(t,n){var e=n(Math.sqrt,Math.min,Math.max,Math.abs);"undefined"!=typeof exports?module.exports=e:"function"==typeof define&&define.amd?define(e):t.Const=e})(this,function(t,n,e,i){function o(t){return t instanceof Array}function s(t){return"function"==typeof t}var r={},h=r.utils={empty:function(t){if(o(t))t.length=0;else for(var n in t)t.hasOwnProperty(n)&&delete t[n];return t},size:function(t){if(o(t))return t.length;var n=0;for(var e in t)t.hasOwnProperty(e)&&n++;return n},contains:function(t,n){if(o(t)){if(s(Array.prototype.indexOf))return t.indexOf(n)>=0;for(var e=t.length,i=0;e>i;)if(t[i++]===n)return!0}return t.hasOwnProperty(n)},each:function(t,n,e){var i=0;if(o(t))for(var s=t.length;s>i;)n.call(e,t[i],i++);else for(i in t)t.hasOwnProperty(i)&&n.call(e,t[i],i);return t},map:function(t,n,e){var i=0;if(o(t))for(var s=t.length;s>i;)t[i]=n.call(e,t[i],i++);else for(i in t)t.hasOwnProperty(i)&&(t[i]=n.call(e,t[i],i));return t},all:function(t,n,e){for(var i=0,o=t.length;o>i;)if(!n.call(e,t[i],i++))return!1;return!0}},u=r.Point=function(t,n){this.x=t||0,this.y=n||0},a=r.Rect=function(t,n,e,i){this.x=t||0,this.y=n||0,this.width=e||0,this.height=i||0};r.distance=function(n,e){var i=e.x-n.x,o=e.y-n.y;return t(i*i+o*o)},r.ccw=function(t,n,e,i){return i?(e.y-t.y)*(n.x-t.x)>(n.y-t.y)*(e.x-t.x):(e.y-t.y)*(n.x-t.x)>=(n.y-t.y)*(e.x-t.x)},r.intersect=function(t,n,e,i){return r.ccw(t,e,i)!==r.ccw(n,e,i)&&r.ccw(t,n,e)!==r.ccw(t,n,i)},r.getRectForPointRing=function(t){var i=t[0],o=i.x,s=i.x,r=i.y,u=i.y;return h.each(t,function(t){o=n(o,t.x),s=e(s,t.x),r=n(r,t.y),u=e(u,t.y)}),new a(o,r,s-o,u-r)},r.hitTestRect=function(t,i){var o=n(i.x,i.x+i.width),s=e(i.x,i.x+i.width),r=n(i.y,i.y+i.height),h=e(i.y,i.y+i.height);return t.x>=o&&t.y>=r&&s>=t.x&&h>=t.y},r.hitTestPointRing=function(t,e){for(var i,o,s=e.length,r=new u(0,t.y),h=0,a=0;s>a;)i=e[a],o=e[(a+1)%s],r.x=n(r.x,n(i.x,o.x)-1),h+=this.intersect(r,t,i,o)?1:0,a++;return h%2>0},r.snapPointToLineSegment=function(t,n,e){var i=t.x-n.x,o=t.y-n.y,s=e.x-n.x,r=e.y-n.y,h=s*s+r*r,a=i*s+o*r,c=a/h;return 0>c?new u(n.x,n.y):c>1?new u(e.x,e.y):new u(n.x+s*c,n.y+r*c)},r.getNearestPointToPoint=function(t,n){var e,o,s=n.length-1,h=null,u=0/0;for(n.sort(function(n,e){return n=i(t.x-n.x),e=i(t.x-e.x),e-n});s>=0&&(e=n[s--],u>i(t.x-e.x)||isNaN(u));)o=r.distance(t,e),(u>o||isNaN(u))&&(h=e,u=o);return h};var c=r.Node=function(t,n,e,i,o){this.id=t,this.x=n||0,this.y=e||0,this.to=o||{},this.data=i||null},d=r.Polygon=function(t,n,e){this.id=t,this.nodes=n.slice(),this.data=e||null},f=r.Path=function(t,n,e){this.nodes=t||[],this.weight=n||0,this.estimate=e||0};f.prototype={copy:function(t,n){return new f(this.nodes.slice(),t||this.weight,n||this.estimate)},last:function(){return this.nodes[this.nodes.length-1]},contains:function(t){return h.contains(t)},prioratize:function(t,n){return n.estimate-t.estimate},dispose:function(){this.nodes.length=0,this.nodes=null}};var l=r.Grid=function(t,n){this._h={},this._i=0,this.nodes={},this.polys={},this.setData(t,n)};return l.prototype={types:{NODE:"n",POLYGON:"p"},_id:function(t){return t+this._i++},reset:function(){h.empty(this.nodes),h.empty(this.polys),this.icount=0},setData:function(t,n){this.reset(),h.each(t||[],function(t){this.nodes[t.id]=t},this),h.each(n||[],function(t){this.polys[t.id]=t},this)},addNode:function(t,n,e){var i=new c(this._id(this.types.NODE),t,n,e);return this.nodes[i.id]=i,i.id},getNodeById:function(t){return o(t)?h.map(t.slice(),function(t){return this.nodes[t]},this):this.nodes.hasOwnProperty(t)?this.nodes[t]:null},getNumNodes:function(){return h.size(this.nodes)},hasNode:function(t){return o(t)?h.all(t,function(t){return this.nodes.hasOwnProperty(t)},this):this.nodes.hasOwnProperty(t)},joinNodes:function(t){var n=!1;return t.length>1&&this.hasNode(t)&&h.each(t,function(e){for(var i=this.nodes[e],o=t.length,s=0;o>s;)e=t[s++],e!==i.id&&(i.to[e]=1,n=!0)},this),n},splitNodes:function(t){var n=!1;return 2>t.length?this.detachNodes(t):(h.each(t,function(e){var i=this.nodes[e];if(i&&i.to)for(e in i.to)h.contains(t,e)&&(delete i.to[e],n=!0)},this),n)},detachNodes:function(t){var n=!1;return h.each(t,function(t){var e,i,o=this.nodes[t];if(o&&o.to){for(i in o.to)delete o.to[i],e=this.nodes[i],e&&e.to&&delete e.to[t];n=!0}},this),n},removeNodes:function(t){var n=this.detachNodes(t);return h.each(t,function(t){var e,i;if(this.nodes.hasOwnProperty(t)){delete this.nodes[t];for(i in this.polys)e=this.polys[i],e&&h.contains(e.nodes,t)&&delete this.polys[i];n=!0}},this),n},addPolygon:function(t,n){var e;return t.length>=3&&this.hasNode(t)?(e=new d(this._id(this.types.POLYGON),t,n),this.polys[e.id]=e,e.id):null},getPolygonById:function(t){return this.polys.hasOwnProperty(t)?this.polys[t]:null},getNodesForPolygon:function(t){return this.polys.hasOwnProperty(t)?h.map(this.polys[t].nodes.slice(),function(t){return this.nodes[t]},this):null},getNumPolygons:function(){return h.size(this.polys)},removePolygons:function(t){var n=!1;return h.each(t,function(t){this.polys.hasOwnProperty(t)&&(delete this.polys[t],n=!0)},this),n},findPath:function(t,n,e,i){var o,h,u,a,c,d,l,y=[],p={},g=this.getNodeById(t),P=this.getNodeById(n),x=0;for(s(e)||(e=r.distance),s(i)||(i=r.distance),y.push(new f([g],e(g,g)));y.length>0;){h=y.pop(),g=h.last();for(l in g.to)g.to.hasOwnProperty(l)&&(u=this.nodes[l],u&&!h.contains(u)&&(c=h.weight+e(g,u),(p[u.id]||c)>=c&&(p[u.id]=c,d=c+i(u,P),(!o||o.weight>d)&&(a=h.copy(c,d),a.nodes.push(u),u.id===P.id?(o&&o.dispose(),o=a):y.push(a),a=null))),u=null);h.dispose(),h=g=null,y.sort(f.prototype.prioratize),x++}return y=p=P=null,{valid:!!o,weight:o?o.weight:0,cycles:x,nodes:o?o.nodes:[]}},findPathWithFewestNodes:function(t,n){var e=function(){return 1};return this.findPath(t,n,e,e)},snapPointToGrid:function(t){var n=null,e=0/0,i={};return h.each(this.nodes,function(o,s){if(t.id!==s)for(var h in o.to)if(o.to.hasOwnProperty(h)&&!i.hasOwnProperty(h+" "+o.id)){var u=this.nodes[h],a=r.snapPointToLineSegment(t,o,u),c=r.distance(t,a);i[o.id+" "+u.id]=!0,(!n||e>c)&&(n=a,e=c)}},this),n||t},getNearestNodeToNode:function(t){var n=null,e=[],i=this.getNodeById(t);return i&&(h.each(this.nodes,function(t){t.id!==i.id&&e.push(t)},this),n=r.getNearestPointToPoint(i,e),e.length=0),n},getNearestNodeToPoint:function(t){var n=[];return h.each(this.nodes,function(t){n.push(t)},this),t=r.getNearestPointToPoint(t,n),n.length=0,t},hitTestPointInPolygons:function(t){for(var n in this.polys)if(this.polys.hasOwnProperty(n)&&r.hitTestPointRing(t,this.getNodesForPolygon(n)))return!0;return!1},getPolygonHitsForPoint:function(t){var n=[];return h.each(this.polys,function(e,i){r.hitTestPointRing(t,this.getNodesForPolygon(i))&&n.push(e.id)},this),n},getNodesInPolygon:function(t){var n=[],e=this.getPolygonById(t),i=this.getNodesForPolygon(t),o=r.getRectForPointRing(i);return e&&h.each(this.nodes,function(t){r.hitTestRect(t,o)&&!h.contains(e.nodes,t.id)&&r.hitTestPointRing(t,i)&&n.push(t.id)},this),n},getNodesInRect:function(t){var n=[];return h.each(this.nodes,function(e){r.hitTestRect(e,t)&&n.push(e.id)},this),n}},r});